swagger: "2.0"
info:
  description: "This is the API documentation of Beleza na WEB test.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io)."
  version: "1.0.0"
  title: "Swagger Beleza na Web Products"
  contact:
    name: "Support web site"
    url: "https://www.belezanaweb.com.br/atendimento/"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/belezanaweb"
tags:
- name: "product"
  description: "Everything about the Products"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
schemes:
- "https"
- "http"
paths:
  /product:
    post:
      tags:
      - "product"
      summary: "Place a new product"
      description: ""
      operationId: "postProduct"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Product to be created"
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Product"
        400:
          description: "Invalid Order"
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
      - "product"
      summary: "Updates a product in the warehouse with form data"
      description: ""
      operationId: "updateProductWithForm"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Product object that needs to be added to the warehouse"
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        405:
          description: "Invalid input"
          schema:
            $ref: "#/definitions/Error"
  /product/{sku}:
    get:
      tags:
      - "product"
      summary: "Find product by ID (sku)"
      description: "Returns a single product"
      operationId: "getProductBySKU"
      produces:
      - "application/json"
      parameters:
      - name: "sku"
        in: "path"
        description: "ID of product to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Product"
        400:
          description: "Invalid ID supplied"
          schema:
            $ref: "#/definitions/Error"
        404:
          description: "Product not found"
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
      - "product"
      summary: "Deletes a product"
      description: ""
      operationId: "deleteProduct"
      produces:
      - "application/json"
      parameters:
      - name: "sku"
        in: "path"
        description: "Product id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Product not found"
          schema:
            $ref: "#/definitions/Error"
definitions:
  Warehouse:
    type: "object"
    properties:
      locality:
        type: "string"
        description: "location of warehouse"
      quantity:
        type: integer
        description: "total of a given product in the specific warehouse"
        format: "int64"
      kind:
        type: string
        description: "Type of warehouse (ECOMMERCE, PHYSICAL_STORE)"
  Inventory:
    type: "object"
    properties:
      quantity:
        type: integer
        description: "Total of products in all warehouses"
        format: "int64"
      warehouses:
        type: "array"
        items:
          $ref: "#/definitions/Warehouse"
  Product:
    type: "object"
    required:
    - "name"
    properties:
      sku:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        description: "product full name "
        example: "L'Or√©al Professionnel Expert Absolut Repair Cortex"
      inventory: 
        type: "object"
        $ref: "#/definitions/Inventory"
      isMarketable:
        type: "boolean"
        description: "informs if product is on stock or not"
  Error:
    type: "object"
    properties:
      code:
        type: "number"
      message:
        type: "string"
          
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"